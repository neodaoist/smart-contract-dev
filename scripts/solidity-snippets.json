{
	// Place your snippets for solidity here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

    // general
    
    // TODO customize to your own style =)
    "section header": {
        "prefix": "se",
        "body": [
            "/*//////////////////////////////////////////////////////////////",
            "                    ${1:title}",
            "//////////////////////////////////////////////////////////////*/"
        ],
        "description": "Add section header"
    },

    "function definition": {
        "prefix": "fn",
        "body": [
            "function $1($2) $3 {",
            "    $0",
            "}"
        ],
        "description": "Add function definition"
    },

    // test fixtures

    "forge test": {
        "prefix": "ft",
        "body": [
            "function test$1() public {",
            "    $0",
            "}"
        ],
        "description": "Add forge test"
    },

    "forge fuzz test": {
        "prefix": "fz",
        "body": [
            "function test$1($2) public {",
            "   $0",
            "}"
        ],
        "description": "Add forge fuzz test"
    },

    // test assertions

    "forge assert true": {
        "prefix": "at",
        "body": [
            "assertTrue(${1:data});"
        ],
        "description": "Add forge assert true"
    },

    "forge assert equals": {
        "prefix": "ae",
        "body": [
            "assertEq(${1:actual}, ${2:expected});"
        ],
        "description": "Add forge assert equals"
    },

    "forge assert expect emit event": {
        "prefix": "av",
        "body": [
            "vm.expectEmit(true, true, true, true);",
            "emit ${1:event};"
        ],
        "description": "Add forge assert expect emit event"
    },

    "forge assert expect revert": {
        "prefix": "ar",
        "body": [
            "vm.expectRevert(${1:message});"
        ],
        "description": "Add forge assert expect revert"
    }
    
}
